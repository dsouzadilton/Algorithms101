#include<stdio.h>
int w[10]={0};
int n,s=0,sol[10]={0},tot_pl=0,count=0;
//to check whether the node is promising
int promising(int l,int wsf,int tpl){
//check the required two conditions
if(wsf+w[l+1]<=s && wsf+tpl>=s) {
return 1;
}
return 0;
}
void sum_of_subsets(int l,int wsf,int tpl){
int i;
if(wsf==s){
count++;
printf("\nSolution Vector : %d",count); //print
the solution vector
printf("\n");
for(i=1;i<=n;i++){
printf("%d\t",sol[i]);
}
printf("\n");
}
//check whether the node is promising
else if(promising(l,wsf,tpl)) {
sol[l+1]=1;
sum_of_subsets(l+1,wsf+w[l+1],tpl-w[l+1]);
sol[l+1]=0;
sum_of_subsets(l+1,wsf,tpl-w[l+1]);
}
}
int main(){
int i;
printf("Enter the number of distinct items: ");//number of
items
8865 Dilton D'souza SE Comps-A - AOA Exp16
SUM OF SUBSET
scanf("%d",&n);
printf("\n");
for(i=1;i<=n;i++) {
printf("Enter the weight of the Item Number %d:
",(i));//enter weight
scanf("%d",&w[i]);
tot_pl=tot_pl+w[i]; //Calulating total profit
}
printf("\nEnter the Maximum allowed weight : ");//maximum
weight
scanf("%d",&s);
sum_of_subsets(0,0,tot_pl); // call to sum of subset
method
return 0;
}